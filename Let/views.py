import datetime
import os
from urllib import response

import requests
from django.http import HttpResponse
from django.shortcuts import render, redirect
from django.template.context_processors import request
import json
from jinja2 import Environment, FileSystemLoader
from pyecharts.globals import CurrentConfig, ThemeType
from django.http import HttpResponse
import numpy as np

from pyecharts import options as opts
from pyecharts.charts import Line

pinjun = []

# 图标数据获取跳转Views
from Let import models


def LetView(request):
    import bs4
    import requests
    from bs4 import BeautifulSoup
    res = requests.post(
        url='http://www.wap.cnyiot.com/(S(mjfpk2lgscja02m00mcj3otd))/nat/pay.aspx?mid=19500357280&chInfo=ch_share__chsub_CopyLink&apshareid=7cad8ac6-7aed-4391-b02f-23a9d11fbe37')
    # rex = requests.post(url='http://www.wap.cnyiot.com/(S(jd2c1lijcm5pmagoyoyqr2yk))/nat/pay.aspx?Method=getpayfee')
    soup = bs4.BeautifulSoup(res.text, 'html.parser')
    x = soup.find_all("label")
    end = x[1].string
    if models.elet.objects.filter(dataNum=datetime.datetime.now()):
        print('今日数据已存在')
    else:
        enddian = models.elet.objects.all().order_by('electricityNum')
        x = enddian[0].electricityNum
        powerend = int(float(x)) - int(float(end))
        pinjunpower = np.mean(pinjun)
        models.elet.objects.create(electricityNum=end, Power_consumption=powerend, Average_power=pinjunpower)
    return redirect('http://127.0.0.1:8000/app/test/')


##图表展示ViewS
def index(request):
    x = 0
    end = []
    start = []
    pinjun_start = []

    # x = models.elet.objects.all()
    # print(x.values_list())
    for elenum in models.elet.objects.values_list():
        end.append(elenum[1])
        start.append(elenum[2])
        pinjun.append(int(elenum[3]))
        pinjun_start.append(int(elenum[4]))
    # for test in models.elet.objects.values_list():
    #         pinjun.append(test[3])
    c = (
        Line()
        .add_xaxis(end)
        .add_yaxis("昨日耗电量", pinjun, itemstyle_opts=opts.ItemStyleOpts(border_width=3), )
        .add_yaxis("总表电量", start, itemstyle_opts=opts.ItemStyleOpts(border_width=3))
        .add_yaxis("平均每日耗电量", pinjun_start, itemstyle_opts=opts.ItemStyleOpts(border_width=3))
        .set_global_opts(title_opts=opts.TitleOpts(title="电力走势图", subtitle="我是副标题"),
                         datazoom_opts=opts.DataZoomOpts(orient="horizontal"),
                         tooltip_opts=opts.TooltipOpts(axis_pointer_type="cross"))
    )
    c.render("templates/fc_show.html")
    return HttpResponse(c.render_embed())


# ##视图测试ViewS
# def test(request):
#     enddian = models.elet.objects.all().order_by('electricityNum') #将选择数据库指定的字段转换成列表
#     x = enddian[1].electricityNum #选择字段的倒数第一个，可以获取字段的
#     print(int(float(x)))
#     y = enddian[0].electricityNum
#     print(int(float(y)))
#     return render(request,'index.html')
#


# 电费查询主页面
def index_div(request):
    timesdata = models.elet.objects.all()
    return render(request, 'index_page/index.html', {'timesdata': timesdata})


# 用户登录界面
def user_login(request):
    if request.method == 'GET':
        return render(request, 'index_page/user_login.html')
    if request.method == 'POST':
        username = request.POST.get('name')
        password = request.POST.get('password')
        if username == models.user.objects.get('username') and password == models.user.objects.get('password'):
            return redirect('http://127.0.0.1:8000/app/index/')


##用户注册
def user_reg(request):
    if request.method == 'GET':
        return render(request, 'index_page/user_reg.html')
    if request.method == 'POST':
        rename = request.POST.get('Rname')
        username = request.POST.get('name')
        password = request.POST.get('password')
        models.elet.objects.create(userkeyid=1)
        models.user.objects.create(user_Rename=rename, username=username, password=password, testid_id=1)
        return redirect('http://127.0.0.1:8000/app/index/')


##主页新闻页面
# def news_index(request):
#     res = requests.get(
#         'https://i.news.qq.com/trpc.qqnews_web.pc_base_srv.base_http_proxy/NinjaPageContentSync?pull_urls=news_top_2018')
#     date_list = res.json()
#     x = date_list['data']
#     for test in x:
#         if test['img_url'] == '':
#             continue
#         else:
#             end_jpg = requests.get(test['img_url'])
#             file = open('Let/static/images/News_jpg/' + test['article_id'] + '.png', 'w')
#             file.close()
#             with open('Let/static/images/News_jpg/' + test['article_id'] + '.png', 'wb') as file:
#                 # 每128个流遍历一次
#                 for data in end_jpg.iter_content(128):
#                     # 把流写入到文件，这个文件最后写入完成就是，selenium.png
#                     file.write(data)  # data相当于一块一块数据写入到我们的图片文件中
#     # for i in x:
#     #     end_list_url = i['url']
#     #     title = i['title']
#     #     imgurl = i['img_url']
#     return render(request, 'index_page/news_index.html', {'news': x, })


def news_test(request):
    res = requests.get(
        'https://i.news.qq.com/trpc.qqnews_web.pc_base_srv.base_http_proxy/NinjaPageContentSync?pull_urls=news_top_2018')
    date_list = res.json()
    x = date_list['data']
    for test in x:
        if test['img_url'] == '':
            continue
        else:
            end_jpg = requests.get(test['img_url'])
            file = open('Let/static/images/News_jpg/' + test['article_id'] + '.png', 'w')
            file.close()
            with open('Let/static/images/News_jpg/' + test['article_id'] + '.png', 'wb') as file:
                # 每128个流遍历一次
                for data in end_jpg.iter_content(128):
                    # 把流写入到文件，这个文件最后写入完成就是，selenium.png
                    file.write(data)  # data相当于一块一块数据写入到我们的图片文件中
    return render(request, 'index_page/1.html', {'news': x})

def newsadd(request):
    res = requests.get(
        'https://i.news.qq.com/trpc.qqnews_web.pc_base_srv.base_http_proxy/NinjaPageContentSync?pull_urls=news_top_2018')
    date_list = res.json()
    x = date_list['data']
    for i in x:
       if i['img_url'] == '':
           continue
       else:
           models.news.objects.create(news_title=i['title'],news_url=i['url'],img_url=i['img_url'],news_group=i['group'],news_id_id=i['group'])
    return  request('hhhhh')